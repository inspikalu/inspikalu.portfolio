---
import RightTriangle from "./RightTriangle.astro";
import { client } from "../../tina/__generated__/client";
import type { Experience } from "../../tina/__generated__/types";
import { TinaMarkdown } from "tinacms/dist/rich-text";

// Fetch experiences
const response = await client.queries.experienceConnection();
const experiences = (response.data.experienceConnection.edges ?? [])
  .map((edge) => edge?.node as Experience | undefined)
  .filter((experience): experience is Experience => Boolean(experience));

// Sort experiences by priority (lower numbers come first)
const sortedExperiences = [...experiences].sort(
  (a, b) => ((a?.priority ?? 0) - (b?.priority ?? 0))
);

// Format date function
const formatDate = (dateString: string) => {
  if (!dateString) return "Present";
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });
};
---

<section class="bg-gradient-to-br from-card-background to-background py-8" id="experiences">
  <section
    class="flex flex-col mx-auto w-[90%] text-text items-start gap-8"
  >
    <div class="w-full flex flex-col gap-3">
      <h2 class="text-primary font-extrabold flex items-center gap-2">
        <RightTriangle fill="#d72638" size="13" /> My Experience
      </h2>
      <h2 class="text-3xl font-bold">Work & Volunteer Experience</h2>
      
      {sortedExperiences.length === 0 ? (
        <p class="text-text/70 italic">No experience listed yet.</p>
      ) : (
        <div class="w-full space-y-6 mt-4">
          {sortedExperiences.map((exp) => (
            <div class="bg-background rounded-lg overflow-hidden shadow-md p-5 border-l-4 border-primary">
              <div class="flex flex-col md:flex-row md:justify-between md:items-start gap-2">
                <div>
                  <h3 class="text-xl font-bold">{exp.title}</h3>
                  <p class="text-primary font-medium">{exp.company}</p>
                </div>
                <div class="flex gap-3 flex-wrap">
                  <span class="bg-card-background text-text px-3 py-1 rounded-full text-sm">
                    {exp.type}
                  </span>
                  <span class="bg-card-background text-text px-3 py-1 rounded-full text-sm">
                    {exp.location}
                  </span>
                </div>
              </div>
              
              <div class="mt-2 text-text/80 text-sm">
                <span>{exp.startDate ? formatDate(exp.startDate) : "N/A"} - {exp.current ? "Present" : (exp.endDate ? formatDate(exp.endDate) : "N/A")}</span>
              </div>
              
              <div class="mt-4 text-text/90 prose prose-sm prose-invert max-w-none">
                {exp.description && (
                  <TinaMarkdown content={exp.description} />
                )}
              </div>
              
              {exp.tags && exp.tags.length > 0 && (
                <div class="mt-4 flex flex-wrap gap-2">
                  {exp.tags.map((tag) => (
                    <span class="bg-primary/10 text-primary px-2 py-1 rounded-md text-xs font-medium">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      )}
    </div>

    {sortedExperiences.length === 0 && (
      <div class="w-full flex justify-center items-center py-12">
        <p class="text-text/70 text-lg italic">Experience details coming soon...</p>
      </div>
    )}
  </section>
</section>